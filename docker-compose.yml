version: '3.8'

services:
  fastapi:
    build: .
    container_name: abcem
    env_file:
      - .env.docker
    volumes:
      - .:/app  # Bind mount for development; adjust as needed for production
    networks:
      - webnet
    depends_on:
      - postgres
      - redis
      - kafka

  nginx:
    image: nginx:latest
    container_name: nginx_proxy
    env_file:
      - .env.docker
    ports:
      - "80:80"    # Map host port 80 to Nginx container port 80
      - "443:443"  # (Optional) Map host port 443 for HTTPS
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d  # Nginx configuration
      - ./nginx/certs:/etc/nginx/certs      # SSL certificates (optional)
    depends_on:
      - fastapi
    networks:
      - webnet

  postgres:
    image: postgres:14
    container_name: postgres_db
    env_file:
      - .env.docker
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"  # Expose if external access is needed; remove if not required
    networks:
      - webnet

  redis:
    image: redis:7
    container_name: redis_cache
    env_file:
      - .env.docker
    ports:
      - "6379:6379"  # Expose if external access is needed; remove if not required
    volumes:
      - redis_data:/data
    networks:
      - webnet

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - webnet

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    networks:
      - webnet

networks:
  webnet:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
